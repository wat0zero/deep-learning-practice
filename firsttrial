from tensorflow.keras import models
from tensorflow.keras import layers
from tensorflow.keras.datasets import mnist
from tensorflow.keras.utils import to_categorical

# data
(train_images, train_labels), (test_images, test_labels) = mnist.load_data()
# (60000x28x28, 60000x1), (10000x28x28, 10000x1)

# test_labels--> 정답지 개념 / tensor는 공간 개념(?)

# deeplearning model
network = models.Sequential() # layer2layer not cyclic - 돌아가는 모델 아니고, 순차적으로 내려가는 모델이다.

# network.add(layer,Flatten(): 2D를 1D로 평탄화한다.)
network.add(layers.Dense(512, activation='relu', input_shape=(28*28,)))
network.add(layers.Dense(10, activation='softmax'))

network.compile(optimizer='rmsprop',
                loss='categorical_crossentropy',
                metrics=['accuracy'])

train_images = train_images.reshape((60000,28*28)) # flatten
train_images = train_images.astype('float32')/255 # 0 ~ 255 --> 0.0 ~ 1.0
test_images = test_images.reshape((10000,28*28))
test_images = test_images.astype('float32')/255

# encoding
train_labels = to_categorical(train_labels)
test_labels = to_categorical(test_labels)

network.fit(train_images, train_labels, epochs=5, batch_size=128)

test_loss, test_acc = network.evaluate(test_images, test_labels)
print('test_acc:', test_acc)
